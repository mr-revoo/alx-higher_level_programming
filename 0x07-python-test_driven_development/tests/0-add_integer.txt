===============================================================================
# module 0-add_integers.py
===============================================================================
# doctest for function add_integer
===============================================================================
# import function add_integer
>>> add_integer = __import__('0-add_integer').add_integer

===============================================================================
# normal call with int and float
===============================================================================
>>> add_integer(1, 2)
3

>>> add_integer(1.2, 2.3)
3

===============================================================================
# call with one argument
===============================================================================
>>> print(add_integer(1))
99

===============================================================================
# call with one argument None
===============================================================================
>>> print(add_integer(None))
Traceback (most recent call last):
...
TypeError: a must be an integer

===============================================================================
# call with second argument None
===============================================================================
>>> print(add_integer(1, None))
Traceback (most recent call last):
...
TypeError: b must be an integer

===============================================================================
# call with non int or float
===============================================================================
>>> add_integer(1.2, "2.3")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer("1.2", 2.3)
Traceback (most recent call last):
...
TypeError: a must be an integer

===============================================================================
# call with special float value inf
===============================================================================
>>> print(add_integer(float("inf")))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

===============================================================================
# call with special float value -inf
===============================================================================
>>> print(add_integer(float("-inf")))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

===============================================================================
# call with special float value nan
===============================================================================
>>> print(add_integer(float("nan")))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
